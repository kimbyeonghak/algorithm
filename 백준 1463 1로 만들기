#include<iostream>
#include<algorithm>
using namespace std;

int d[1000000];

int main(){
	int n;
	cin >> n;
	d[1] = 0;
	for(int i = 2;i<=n;i++){
		// 1. 1을 빼는 경우.
		d[i] = d[i-1] + 1; // i가 5일 때, 
		
		//2. 2로 나누어질 경우.
		if(i%2==0){
			d[i] = min(d[i],d[i/2]+1);
		}
		
		//3. 3으로 나누어질때
		if(i%3==0){
			d[i] = min(d[i],d[i/3]+1);
		}
	}
	
	cout << d[n];
	return 0;
}


#include <iostream>
using namespace std;

int dp[1000001]; // dp 배열 선언

int makeOne(int n) {
    if (n == 1) return 0;
    if (dp[n] != -1) return dp[n]; // 이미 계산된 값이면 반환

    dp[n] = makeOne(n - 1) + 1;

    if (n % 2 == 0) {
        int temp = makeOne(n / 2) + 1;
        if (dp[n] > temp) dp[n] = temp;
    }

    if (n % 3 == 0) {
        int temp = makeOne(n / 3) + 1;
        if (dp[n] > temp) dp[n] = temp;
    }

    return dp[n];
}

int main() {
    int n;
    cin >> n;

    // fill 안 쓰고 for문으로 -1로 초기화
    for (int i = 0; i <= n; i++) {
        dp[i] = -1;
    }

    cout << makeOne(n) << endl;

    return 0;
}
